#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>

const char* ssid = "SSID";
const char* password = "PASSWORD";

ESP8266WebServer server(80);

const int led = 13;
String sendMessage = "";

void handleRoot() 
{
 // digitalWrite(LED_BUILTIN, HIGH);
  
  server.send(200, "text/plain", "Hello");
  // digitalWrite(LED_BUILTIN, LOW);
}

void handleNotFound() 
{
  
  Serial.print("Handle not found\n");
  //digitalWrite(LED_BUILTIN, HIGH);
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) 
  {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
  //digitalWrite(LED_BUILTIN, LOW);
}

void setup(void) 
{
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, HIGH); //LED Off
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) 
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
   
  if (MDNS.begin("esp8266")) 
  {
    Serial.println("MDNS responder started");
  }

  server.on("/", handleRoot);

  server.on("/LEDON", []() 
  {
   Serial.println("Got ON\n");
   server.send(200, "text/plain", "LEDON");
    digitalWrite(LED_BUILTIN, LOW);
   for (uint8_t i = 0; i < server.args(); i++)
   {
        if(server.argName(i) == "ON")
     {
        // Serial.println("Got ON\n");
        String message= ("Got on = ");
        message +=server.arg(i);
        Serial.println(message);
          
      }
    
    if(server.argName(i) == "OFF")
     {
       Serial.println("Got OFF\n"); 
        
       // String message= "LEDOFF";
      //  message += " Got off ";
      //  message += "OFF = ";
      //  message += server.arg(i);
      //  server.send(200, "text/plain", message);
    
     }

   }
    
  });

  server.on("/LEDOFF", []() 
  {
    Serial.println("Got OFF\n");
    server.send(200, "text/plain", "LEDOFF");
    
    digitalWrite(LED_BUILTIN, HIGH);
  });

  server.onNotFound(handleNotFound);

  server.begin();
  Serial.println("HTTP server started");
}

void loop(void) 
{
  server.handleClient();
}
